CREATE TABLE Students (
	student_id INT PRIMARY KEY,
    name varchar(20),
    age INT,
    check(age>18)
    );
    


CREATE TABLE Enrollments (
    enrollment_id INT PRIMARY KEY,
    STUDENT_ID INT,
    COURSE_ID INT,
    foreign key (STUDENT_ID) REFERENCES Students(Student_id)
);

select * from Students;
 INSERT INTO Enrollments(enrollment_id, student_id, course_id) VALUES (101, 2, 1100);
select * from Students;
INSERT INTO Students(Student_id, name, age) VALUES (2, 'Lavanya', 26);
select * from Enrollments;
CREATE TABLE OrderDetails (
	order_id int,
    product_id int,
    quantity int,
    primary key (order_id, product_id)-- -----composite key

CREATE TABLE PRODUCTS(
		PRODUCTID INT,
        PRODNAME VARCHAR(50),
        PRICE INT);
        
INSERT INTO PRODUCTS VALUES(1, 'Nivea', 5000);
INSERT INTO PRODUCTS VALUES(2, 'kajal', 4000), (3, 'Lipbalm', 3000), (4, 'mysore sandal', 100000);
SELECT * FROM PRODUCTS;
SELECT MAX(PRICE) FROM PRODUCTS;

INSERT INTO PRODUCTS VALUES(1, 'ALOVERA GEL', 6000);

SELECT MAX(PRICE) AS SMALLESTPRICE, PRODUCTID 
FROM PRODUCTS 
GROUP BY PRODUCTID;
UPDATE PRODUCTS SET PRODUCTID = 5 WHERE PRODUCTNAME='ALOVERA GEL';

SELECT * FROM PRODUCTS;
SELECT MIN(PRICE) AS SMALLESTPRICE, PRODUCTID 
FROM PRODUCTS 
GROUP BY PRODUCTID;

SELECT COUNT(*) AS NUMBEROFCOLUMNS FROM PRODUCTS;

SELECT COUNT(PRODUCTID) FROM PRODUCTS WHERE PRICE > 10000;

SELECT * FROM PRODUCTS;



SELECT AVG(PRICE) AS SMALLESTPRICE, PRODUCTID 
FROM PRODUCTS 
GROUP BY PRODUCTID;
 
SELECT COUNT(PRODUCTID) FROM PRICE WHERE PRICE > 10000;


SELECT COUNT(DISTINCT PRICE) FROM PRODUCTS;
SELECT SUM(PRICE) FROM PRODUCTS;

SELECT AVG(PRICE) FROM PRODUCTS;

CREATE TABLE CUSTOMERS (
    CUSTOMER_ID INT PRIMARY KEY, 
    NAME VARCHAR(100)
);

CREATE TABLE ORDERS (
    ORDERID INT PRIMARY KEY,
    CUSTOMER_ID INT,
    PRODUCT VARCHAR(100),
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID) ON DELETE CASCADE
);


INSERT INTO CUSTOMERS (CUSTOMER_ID, NAME) VALUES 
(1, 'LALI'),
(2, 'DHRUV'),
(3, 'LAVU');


INSERT INTO ORDERS (ORDERID, CUSTOMER_ID, PRODUCT) VALUES 
(101, 1, 'BAG'),
(102, 2, 'PHONE'),
(103, 3, 'LAPTOP');

DELETE FROM CUSTOMERS WHERE CUSTOMER_ID = 1;

SELECT * FROM ORDERS;


SELECT * FROM CUSTOMERS;
SELECT * FROM ORDERS;

CREATE TABLE EMPLOYEE (
    EMP_ID INT PRIMARY KEY,
    NAME VARCHAR(100),
    DESIGNATION VARCHAR(50),
    SALARY INT
);

INSERT INTO EMPLOYEE (EMP_ID, NAME, DEPARTMENT, SALARY) VALUES
(1, 'LALI', 'MANAGER', 50000),
(2, 'LAV', 'SALESMAN', 45000),
(3, 'DHRUV', 'CLERK', 900000),
(4, 'KRISH', 'Marketing', 800000),
(5, 'HEMA', 'IT', 500000),
(6, 'HEMANTH', 'HR', 700000),
(7, 'SUCHI', 'Finance', 650000),
(8, 'SUPPU', 'MANAGER', 100000);
SELECT * FROM EMPLOYEE;
INSERT INTO EMPLOYEE (EMP_ID, NAME, DEPARTMENT, SALARY) VALUES
(1, 'LALI', 'MANAGER', 50000),
(2, 'LAV', 'SALESMAN', 45000),
(3, 'DHRUV', 'CLERK', 900000),
(4, 'KRISH', 'Marketing', 800000),
(5, 'HEMA', 'IT', 500000),
(6, 'HEMANTH', 'HR', 700000),
(7, 'SUCHI', 'Finance', 650000),
(8, 'SUPPU', 'MANAGER', 100000);





DROP TABLE EMPLOYEE;

CREATE TABLE EMPLOYEE (
    EMP_ID INT PRIMARY KEY,
    NAME VARCHAR(50),
    DEPARTMENT VARCHAR(50),
    SALARY INT
); 
INSERT INTO EMPLOYEE (EMP_ID, NAME, DEPARTMENT, SALARY) VALUES
(1, 'LALI', 'MANAGER', 50000),
(2, 'LAV', 'SALESMAN', 45000),
(3, 'DHRUV', 'CLERK', 900000),
(4, 'KRISH', 'Marketing', 800000),
(5, 'HEMA', 'IT', 500000),
(6, 'HEMANTH', 'HR', 700000),
(7, 'SUCHI', 'Finance', 650000),
(8, 'SUPPU', 'MANAGER', 100000);

SELECT * FROM EMPLOYEE ORDER BY DEPARTMENT ASC, SALARY DESC;

SELECT *, (SALARY * 12) AS ANNUAL_SALARY
FROM EMPLOYEE
ORDER BY ANNUAL_SALARY ASC;
